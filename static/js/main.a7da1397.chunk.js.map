{"version":3,"sources":["components/General.js","components/Education.js","components/Skills.js","App.js","reportWebVitals.js","index.js"],"names":["GeneralEdit","props","state","name","info","email","phone","handleInputChange","bind","handleSubmit","e","valueName","this","setState","prevState","newState","target","value","preventDefault","submit","id","htmlFor","type","onChange","onClick","Component","GeneralDisplay","EducationEdit","education","title","date","EducationDisplay","SkillsEdit","skills","start","leave","companyName","companyTitle","companySkills","companyStart","companyLeave","SkillsDisplay","App","isGeneralEdit","isEducationEdit","isSkillEdit","handleGeneralSubmit","handleEducationSubmit","handleSkillSubmit","toggleEdit","tasks","className","General","Education","Skills","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7da1397.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass GeneralEdit extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: props.info ? props.info.name : '',\n            email: props.info ? props.info.email : '',\n            phone: props.info ? props.info.phone : ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleInputChange(e, valueName) {\n        this.setState( (prevState) => {\n            let newState = {...prevState}\n            newState[valueName] = e.target.value\n            return newState\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.props.submit(this.state)\n    }\n\n    render() {\n        return (\n            <div id='general-info'>\n                <h2>Personal Info</h2>\n                <form>\n                    <label htmlFor='name'>\n                    Name:\n                    <input \n                        type='text' \n                        id='name' \n                        name='name'\n                        value={this.state.name}\n                        onChange={(e) => this.handleInputChange(e, 'name')}\n                    />\n                    </label>\n                    <br />\n                    <label htmlFor='email'>\n                    Email:\n                    <input \n                        type='email' \n                        id='email' \n                        name='email' \n                        value={this.state.email}\n                        onChange={(e) => this.handleInputChange(e, 'email')}\n                    />\n                    </label>\n                    <br />\n                    <label htmlFor='phone'>\n                    Phone #:\n                    <input \n                        type='tel' \n                        id='phone' \n                        name='phone' \n                        value={this.state.phone}\n                        onChange={(e) => this.handleInputChange(e, 'phone')}\n                    />\n                    </label>\n                    <br />\n                    <button onClick={this.handleSubmit}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport class GeneralDisplay extends Component {\n    render () {\n        return (\n            <div>\n                <h2>{this.props.info.name}</h2>\n                <p>Email: {this.props.info.email} -- Phone: {this.props.info.phone}</p>\n                <button onClick={this.props.submit}>Edit</button>\n            </div>\n\n        )\n    }\n}\n\nexport default GeneralEdit\n","import React, {Component} from 'react'\n\nclass EducationEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: this.props.education ? this.props.education.name : \"\",\n            title: this.props.education ? this.props.education.title : \"\",\n            date: this.props.education ? this.props.education.date : \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.props.submit(this.state)\n    }\n\n    handleInputChange(e, valueName) {\n        this.setState( (prevState) => {\n            let newState = {...prevState}\n            newState[valueName] = e.target.value\n            return newState\n        })\n    }\n\n    render () {\n        return (\n            <div id=\"education-info\">\n                <h2>Education</h2>\n                <form>\n                    <label>\n                        School: \n                        <input \n                            type=\"text\"\n                            id=\"school-name\"\n                            name=\"school-name\"\n                            value={this.state.name}\n                            onChange={(e) => this.handleInputChange(e, 'name')}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Study:\n                        <input \n                            type=\"text\"\n                            id=\"school-title\"\n                            name=\"school-title\"\n                            value={this.state.title}\n                            onChange={(e) => this.handleInputChange(e, 'title')}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Date:\n                        <input \n                            type=\"text\"\n                            id=\"school-date\"\n                            name=\"school-date\"\n                            value={this.state.date}\n                            onChange={(e) => this.handleInputChange(e, 'date')}\n                        />\n                    </label>\n                    <br />\n                    <button onClick={this.handleSubmit}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport class EducationDisplay extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Education</h2>\n                <h3>{this.props.education.name}</h3>\n                <p>Study: {this.props.education.title} -- Date: {this.props.education.date}</p>\n                <button onClick={this.props.submit}>Edit</button>\n            </div>\n        )\n    }\n}\n\nexport default EducationEdit","import React, {Component} from 'react'\n\nclass SkillsEdit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: this.props.skills ? this.props.skills.name : '',\n            title: this.props.skills ? this.props.skills.title  : '',\n            skills: this.props.skills ? this.props.skills.skills : '',\n            start: this.props.skills ? this.props.skills.start : '',\n            leave: this.props.skills ? this.props.skills.leave : '',\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.props.submit(this.state)\n    }\n\n    handleInputChange(e, valueName) {\n        this.setState( () => {\n            let newState = {}\n            newState[valueName] = e.target.value\n            return newState\n        })\n    }\n\n    render() {\n        return (\n            <div id=\"skills-info\">\n            <h2>Skills</h2>\n                <form>\n                    <label>\n                        Company:\n                        <input\n                            type='text' \n                            id='company-name'\n                            name='company-name'\n                            value={this.state.companyName}\n                            onChange={(e) => this.handleInputChange(e, 'name')}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Position:\n                        <input \n                            type='text' \n                            id='position-title'\n                            name='position-title'\n                            value={this.state.companyTitle}\n                            onChange={(e) => this.handleInputChange(e, 'title')}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Tasks:\n                        <input\n                            type='text' \n                            id='company-skills'\n                            name='company-skills'\n                            value={this.state.companySkills}\n                            onChange={(e) => this.handleInputChange(e, 'skills')}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Start Date:\n                        <input\n                            type='date'\n                            id='start-date'\n                            name='start-date'\n                            value={this.state.companyStart}\n                            onChange={(e) => this.handleInputChange(e, 'start')}\n                        />\n                    </label>\n                    <br />\n                    <label>\n                        Leave Date:\n                        <input\n                            type='date' \n                            id='leave-date'\n                            name='leave-date'\n                            value={this.state.companyLeave}\n                            onChange={(e) => this.handleInputChange(e, 'leave')}\n                        />\n                    </label>\n                    <br />\n                    <button onClick={this.handleSubmit}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport class SkillsDisplay extends Component {\n    render() {\n        return (\n            <div>\n            <h2>Work History</h2>\n                <h3>{this.props.skills.name}</h3>\n                <p>\n                    Job Title: {this.props.skills.title} -- \n                    Start Date: {this.props.skills.start} - \n                    End Date: {this.props.skills.leave}\n                </p>\n                <p>Skills: {this.props.skills.skills}</p>\n                <button onClick={this.props.submit}>Edit</button>\n            </div>\n        )\n    }\n}\n\nexport default SkillsEdit","import React, {Component} from 'react'\nimport './App.css';\nimport GeneralEdit, {GeneralDisplay} from './components/General'\nimport EducationEdit, {EducationDisplay} from './components/Education'\nimport SkillsEdit, {SkillsDisplay} from './components/Skills'\n\nclass  App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isGeneralEdit: true,\n      isEducationEdit: true,\n      isSkillEdit: true,\n    }\n    this.handleGeneralSubmit = this.handleGeneralSubmit.bind(this)\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this)\n    this.handleSkillSubmit = this.handleSkillSubmit.bind(this)\n    this.toggleEdit = this.toggleEdit.bind(this)\n  }\n\n  handleGeneralSubmit(info) {\n    this.setState( (prevState) => {\n      return {\n        info: {\n          name: info.name,\n          email: info.email,\n          phone: info.phone\n        },\n        isGeneralEdit: !prevState.isGeneralEdit\n      }\n    })\n  }\n\n  handleEducationSubmit(education) {\n    this.setState( (prevState) => {\n      return {\n        education: {\n          name: education.name,\n          title: education.title,\n          date: education.date\n        },\n        isEducationEdit: !prevState.isEducationEdit\n      }\n    })\n  }\n\n  handleSkillSubmit(skills) {\n    this.setState( (prevState) => {\n      return {\n        skills: {\n          name: skills.name,\n          title: skills.title,\n          tasks: skills.tasks,\n          start: skills.start,\n          leave: skills.leave,\n        },\n        isSkillEdit: !prevState.isSkillEdit\n      }\n    })\n  }\n\n  toggleEdit(valueName) {\n    this.setState( (prevState) => {\n      let newState = {}\n      newState[valueName] = !prevState[valueName]\n      return newState\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        {this.state.isGeneralEdit ? \n          <GeneralEdit submit={this.handleGeneralSubmit} info={this.state.info}/> : \n          <GeneralDisplay submit={() => this.toggleEdit('isGeneralEdit')} info={this.state.info}/>\n        }\n        {this.state.isEducationEdit ?\n          <EducationEdit submit={this.handleEducationSubmit} education={this.state.education} /> :\n          <EducationDisplay submit={() => this.toggleEdit('isEducationEdit')} education={this.state.education} />\n        }\n        {this.state.isSkillEdit ?\n          <SkillsEdit submit={this.handleSkillSubmit} skills={this.state.skills} /> :\n          <SkillsDisplay submit={() => this.toggleEdit('isSkillEdit')} skills={this.state.skills} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}